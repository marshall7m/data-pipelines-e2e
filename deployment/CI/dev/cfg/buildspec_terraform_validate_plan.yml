version: 0.2
env:
  shell: bash
phases:
  install:
    commands:
      # install/incorporate terraform validator? 
  build:
    commands:
      # CodeBuild environment variables
      # BRANCH_NAME -- GitHub branch that triggered the CodeBuild project
      # TF_ROOT_DIR -- Directory within branch ($BRANCH_NAME) that will be iterated through for terraform planning and testing
      # LIVE_BRANCHES -- Branches that represent a live cloud environment

      - printenv
      - |
        if [[ -z "${BRANCH_NAME}" ]]; then
          # extract branch from github webhook
          BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | cut -d'/' -f 3)
        fi
      - echo $CODEBUILD_WEBHOOK_HEAD_REF
      - echo $BRANCH_NAME
      - |
        if [[ " ${LIVE_BRANCHES[*]} " == *"$BRANCH_NAME"* ]]; then
          # Iterate only through BRANCH_NAME directory
          TF_ROOT_DIR=${TF_ROOT_DIR}/*/${BRANCH_NAME}/
        else
          # Iterate through both dev and prod directories
          TF_ROOT_DIR=${TF_ROOT_DIR}/*/
        fi
      - echo $TF_ROOT_DIR
      - |
        for dir in $TF_ROOT_DIR; do
          #get list of non-hidden directories within $dir/
          service_dir_list=$(find "${dir}" -type d | grep -v '/\.')
          for sub_dir in $service_dir_list; do
            #if $sub_dir contains .tf or .tfvars files
            if (ls ${sub_dir}/*.tf) > /dev/null 2>&1 || (ls ${sub_dir}/*.tfvars) > /dev/null 2>&1; then
              cd $sub_dir 
              echo ""
              echo "*************** terraform init ******************"
              echo "******* At directory: ${sub_dir} ********"
              echo "*************************************************"
              terraform init
              echo ""
              echo "*************** terraform plan ******************"
              echo "******* At directory: ${sub_dir} ********"
              echo "*************************************************"
              terraform plan
              cd - > /dev/null 
            fi
          done 
        done