version: 0.2

phases:
  install:
    commands:
      - wget https://releases.hashicorp.com/terraform/"$TERRAFORM_VERSION"/terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - unzip terraform_"$TERRAFORM_VERSION"_linux_amd64.zip
      - mv terraform /usr/local/bin/
  build:
    commands:
      # - echo $CODEBUILD_WEBHOOK_EVENT
      - echo $CODEBUILD_WEBHOOK_TRIGGER
      - BRANCH_NAME=$(echo $CODEBUILD_WEBHOOK_HEAD_REF | cut -d'/' -f 3)
      - | 
        case $BRANCH_NAME in
          dev|prod) TF_COMMAND="apply -auto-approve";; \
          *) TF_COMMAND="plan";;
        esac
      - echo $BRANCH_NAME
      - echo $AWS_CONTAINER_CREDENTIALS_RELATIVE_URI
      - export AWS_ACCESS_KEY_ID=`curl --silent http://169.254.170.2:80$AWS_CONTAINER_CREDENTIALS_RELATIVE_URI | jq -r '.AccessKeyId'`
      - echo $AWS_ACCESS_KEY_ID
      - |
        for service in deployment/*/; do
          if [ -d "${service}/${BRANCH_NAME}/" ]; then
            #get list of non-hidden directories within ${service}/${BRANCH_NAME}/
            service_dir_list=$(find "${service}${BRANCH_NAME}" -type d | grep -v '/\.')
            for dir in $service_dir_list; do
              #if directory contains .tf or .tfvars files
              if (ls ${dir}/*.tf) > /dev/null 2>&1 || (ls ${dir}/*.tfvars) > /dev/null 2>&1; then
                cd $dir > /dev/null
                echo ""
                echo "*************** TERRAFORM INIT ******************"
                echo "******* At directory: ${dir} ********"
                echo "*************************************************"
                terraform init
                echo ""
                echo "*************** TERRAFORM $TF_COMMAND ******************"
                echo "******* At directory: ${dir} ********"
                echo "*************************************************"
                terraform $TF_COMMAND
                cd - > /dev/null 
              else
                :
                # echo "No Terraform file were found in ${dir}"
              fi
            done 
          else
            echo "No ${BRANCH_NAME} environment directory exists within ${dir}"
          fi
        done
    